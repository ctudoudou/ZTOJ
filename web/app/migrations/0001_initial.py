# Generated by Django 2.0.5 on 2018-06-28 17:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('competition_name', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField()),
                ('stop_time', models.DateTimeField()),
                ('passwd', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'competition',
            },
        ),
        migrations.CreateModel(
            name='CompetitionHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pass_field', models.FloatField(db_column='pass')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('competition_name', models.ForeignKey(db_column='competition_name', on_delete=django.db.models.deletion.DO_NOTHING, to='app.Competition')),
            ],
            options={
                'db_table': 'competition_history',
            },
        ),
        migrations.CreateModel(
            name='CompetitionList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competition_name', models.ForeignKey(db_column='competition_name', on_delete=django.db.models.deletion.DO_NOTHING, to='app.Competition')),
            ],
            options={
                'db_table': 'competition_list',
            },
        ),
        migrations.CreateModel(
            name='Example',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=45)),
                ('code', models.TextField()),
                ('sample', models.TextField()),
                ('stdout', models.TextField(blank=True, null=True)),
                ('time', models.CharField(blank=True, max_length=45, null=True)),
                ('error', models.TextField(blank=True, null=True)),
                ('memory', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'example',
            },
        ),
        migrations.CreateModel(
            name='Forum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('likeint', models.IntegerField(default=0)),
                ('hide', models.IntegerField(default=1)),
                ('competition_name', models.ForeignKey(db_column='competition_name', on_delete=django.db.models.deletion.DO_NOTHING, to='app.Competition')),
            ],
            options={
                'db_table': 'forum',
            },
        ),
        migrations.CreateModel(
            name='IntegralHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('integral', models.IntegerField()),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('operation', models.TextField()),
            ],
            options={
                'db_table': 'integral_history',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('receive', models.CharField(max_length=45)),
                ('send', models.CharField(max_length=45)),
                ('content', models.TextField()),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('read', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'news',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('organization_name', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('is_use', models.IntegerField(default=1)),
            ],
            options={
                'db_table': 'organization',
            },
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('problem_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=45)),
                ('description', models.TextField()),
                ('cinput', models.TextField()),
                ('coutput', models.TextField()),
                ('sinput', models.TextField()),
                ('soutput', models.TextField()),
                ('hint', models.TextField()),
                ('source', models.TextField()),
                ('label', models.CharField(max_length=45)),
                ('public', models.IntegerField(default=1)),
            ],
            options={
                'db_table': 'problem',
            },
        ),
        migrations.CreateModel(
            name='Submits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=128, unique=True)),
                ('content', models.TextField()),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('pass_field', models.FloatField(db_column='pass')),
                ('similarity', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'submits',
            },
        ),
        migrations.CreateModel(
            name='UserOriginization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creat_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'user_originization',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('email', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=45, unique=True)),
                ('password', models.CharField(max_length=90)),
                ('school', models.CharField(blank=True, max_length=45, null=True)),
                ('ip', models.CharField(blank=True, max_length=45, null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('jurisdiction', models.IntegerField(default=0)),
                ('use', models.IntegerField(default=0)),
                ('integral', models.IntegerField(default=0)),
                ('image', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.AddField(
            model_name='useroriginization',
            name='email',
            field=models.ForeignKey(db_column='email', on_delete=django.db.models.deletion.DO_NOTHING, to='app.Users'),
        ),
        migrations.AddField(
            model_name='useroriginization',
            name='origanization_name',
            field=models.ForeignKey(db_column='origanization_name', on_delete=django.db.models.deletion.DO_NOTHING, to='app.Organization'),
        ),
        migrations.AddField(
            model_name='submits',
            name='email',
            field=models.ForeignKey(db_column='email', on_delete=django.db.models.deletion.DO_NOTHING, to='app.Users'),
        ),
        migrations.AddField(
            model_name='submits',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.Problem'),
        ),
        migrations.AddField(
            model_name='problem',
            name='email',
            field=models.ForeignKey(db_column='email', on_delete=django.db.models.deletion.DO_NOTHING, to='app.Users'),
        ),
        migrations.AddField(
            model_name='organization',
            name='email',
            field=models.ForeignKey(db_column='email', on_delete=django.db.models.deletion.DO_NOTHING, to='app.Users'),
        ),
        migrations.AddField(
            model_name='integralhistory',
            name='email',
            field=models.ForeignKey(db_column='email', on_delete=django.db.models.deletion.DO_NOTHING, to='app.Users'),
        ),
        migrations.AddField(
            model_name='forum',
            name='email',
            field=models.ForeignKey(db_column='email', on_delete=django.db.models.deletion.DO_NOTHING, to='app.Users'),
        ),
        migrations.AddField(
            model_name='example',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.Problem'),
        ),
        migrations.AddField(
            model_name='competitionlist',
            name='email',
            field=models.ForeignKey(db_column='email', on_delete=django.db.models.deletion.DO_NOTHING, to='app.Users'),
        ),
        migrations.AddField(
            model_name='competitionhistory',
            name='email',
            field=models.ForeignKey(db_column='email', on_delete=django.db.models.deletion.DO_NOTHING, to='app.Users'),
        ),
        migrations.AddField(
            model_name='competitionhistory',
            name='probelm',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.Problem'),
        ),
        migrations.AddField(
            model_name='competition',
            name='email',
            field=models.ForeignKey(db_column='email', on_delete=django.db.models.deletion.DO_NOTHING, to='app.Users'),
        ),
    ]
